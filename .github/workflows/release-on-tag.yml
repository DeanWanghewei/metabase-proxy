name: Create Release on Tag

on:
    push:
        tags:
            - "v*" # 匹配以 v 开头的 tag，如 v1.0, v2.1 等

jobs:
    create-release:
        runs-on: ubuntu-latest
        permissions:
            contents: write
            packages: write

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up JDK 21
              uses: actions/setup-java@v4
              with:
                  java-version: "21"
                  distribution: "temurin"

            - name: Setup Gradle
              uses: gradle/actions/setup-gradle@v4

            - name: Make gradlew executable
              run: chmod +x ./gradlew

            - name: Build plugin
              run: ./gradlew buildPlugin

            - name: Extract tag name
              id: tag
              run: echo "TAG_NAME=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

            - name: Get plugin artifact path
              id: plugin_path
              run: |
                  PLUGIN_FILE=$(find build/distributions -name "*.zip" | head -1)
                  echo "PLUGIN_FILE=$PLUGIN_FILE" >> $GITHUB_OUTPUT
                  echo "PLUGIN_NAME=$(basename $PLUGIN_FILE)" >> $GITHUB_OUTPUT

            - name: Generate release notes
              id: release_notes
              run: |
                  BUILD_TIME=$(date -u)
                  cat > release_notes.md << EOF
                  🚀 **Metabase Proxy Plugin Release ${{ steps.tag.outputs.TAG_NAME }}**

                  ## 📦 feature
                  添加配置项: 结果展示方式
                  ## fix
                  - 修复没有选择SQL时.当自动检测到文件末尾时越界问题.
                
                  ---
                  EOF

            - name: Create Release
              uses: softprops/action-gh-release@v2
              with:
                  tag_name: ${{ steps.tag.outputs.TAG_NAME }}
                  name: Release ${{ steps.tag.outputs.TAG_NAME }}
                  body_path: release_notes.md
                  files: ${{ steps.plugin_path.outputs.PLUGIN_FILE }}
                  draft: false
                  prerelease: false
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
